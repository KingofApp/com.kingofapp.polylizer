{
    "config": {
        "index": "/drawer-abcd/home-abcd",
        "theme": {
            "identifier": "koapp-theme-android",
            "path": "themes/koapp-theme-android/koapp-theme-android.html"
        },
        "spinner": {
            "identifier": "koapp-spinner-android",
            "path": "spinners/koapp-spinner-android/koapp-spinner-android.html"
        },
        "colors": {
            "primaryTextColor": "#212121",
            "primaryBackgroundColor": "#ffffff",
            "secondaryTextColor": "#737373",
            "disabledTextColor": "#9b9b9b",
            "dividerColor": "#dbdbdb",
            "primaryColor": "#3f51b5",
            "lightPrimaryColor": "#c5cae9",
            "darkPrimaryColor": "#303f9f",
            "accentColor": "#ff4081",
            "lightAccentColor": "#ff80ab",
            "darkAccentColor": "#f50057",
            "backgroundColor": "#ffffff"
        },
        "images": {
            "background": ""
        },
        "fonts": {
            "primaryFontFamily": {
                "name": "Roboto",
                "url": "https://fonts.googleapis.com/css?family=Roboto"
            },
            "titleFontFamily": {
                "name": "Roboto",
                "url": "https://fonts.googleapis.com/css?family=Roboto"
            }
        },
        "iconset": "icons",
        "lang": [
            "en_US"
        ]
    },
    "services": {
        "googleanalytics": {
            "name": "Google Analytics",
            "identifier": "googleanalytics",
            "type": "P",
            "category": ["analytics"],
            "showOn": {
                "market": true
            },
            "view": "services/googleanalytics/service-googleanalytics.html",
            "requires": [],
            "deps": ["cordova-plugin-google-analytics"],
            "vendor": {
                "googleanalytics": "http://resources.kingofapp.com/services/googleanalytics/service.js"
            },
            "libs": [{
                "bower": {
                    "iron-signals": "PolymerElements/iron-signals#^1.0.2"

                },
                "src": "bower_components/iron-signals/iron-signals.html"
            }],
            "scope": {
                "code": "UA-59289471-2"
            },
            "path": "googleanalytics"
        }
    },
    "modules": {
        "/drawer-abcd/profile/profile-vcard":{
          "name": "Home",
          "identifier": "profile-vcard",
          "type": "P",
          "icon": "profile",
          "view": "modules/profile-vcard/profile-vcard.html",
          "scope": {
            "name": "Oscar Cortez",
            "image": "https://avatars1.githubusercontent.com/u/2553459?v=3&s=400",
            "profession": "Full Stack Ninja Developer",
            "description": "Viajero Del Tiempo - Open Source Lover - Open Hardware Enthusiastic - Open Data Addict - Developer at kronoscode - Carpe Diem",
            "twitter": "oscar_mcm",
            "website": "oscarmcm.com",
            "place":"Managua, Nicaragua"
          }
        },
        "/drawer-abcd/home-abcd": {
          "name": "Home",
          "identifier": "html",
          "type": "P",
          "icon": "home",
          "view": "modules/html/module-html.html",
          "scope": {
              "value": "<div id='content' class='style-scope mark-down'><h1 id='what-are-web-components-' class='style-scope mark-down'>What are web components?</h1> <p class='style-scope mark-down'>Web components are a set of web platform APIs that allow you to create new custom, reusable, encapsulated HTML tags to use in web pages and web apps. Custom components and widgets build on the Web Component standards, will work across modern browsers, and can be used with any JavaScript library or framework that works with HTML.</p> <p class='style-scope mark-down'>Web components are based on existing web standards. Features to support web components are currently being added to the HTML and DOM specs, letting web developers easily extend HTML with new elements with encapsulated styling and custom behavior.</p> <h1 id='specifications' class='style-scope mark-down'>Specifications</h1> <p class='style-scope mark-down'>Web components are based on four main specifications:</p> <h2 id='custom-elements' class='style-scope mark-down'>Custom Elements</h2> <p class='style-scope mark-down'>The <a href='https://w3c.github.io/webcomponents/spec/custom/' class='style-scope mark-down'>Custom Elements specification</a> lays the foundation for designing and using new types of DOM elements.</p> <h2 id='shadow-dom' class='style-scope mark-down'>Shadow DOM</h2> <p class='style-scope mark-down'>The <a href='https://w3c.github.io/webcomponents/spec/shadow/' class='style-scope mark-down'>shadow DOM specification</a> defines how to use encapsulated style and markup in web components.</p> <h2 id='html-imports' class='style-scope mark-down'>HTML imports</h2> <p class='style-scope mark-down'>The <a href='https://w3c.github.io/webcomponents/spec/imports/' class='style-scope mark-down'>HTML imports specification</a> defines the inclusion and reuse of HTML documents in other HTML documents.</p> <h2 id='html-template' class='style-scope mark-down'>HTML Template</h2> <p class='style-scope mark-down'>The <a href='https://html.spec.whatwg.org/multipage/scripting.html#the-template-element/' class='style-scope mark-down'>HTML template element specification</a> defines how to declare fragments of markup that go unused at page load, but can be instantiated later on at runtime.</p> <h1 id='how-do-i-use-a-web-component-' class='style-scope mark-down'>How do I use a web component?</h1> <p class='style-scope mark-down'>The components on this site provide new HTML elements that you can use in your web pages and web applications.</p> <p class='style-scope mark-down'>Using a custom element is as simple as importing it, and using the new tags in an HTML document. For example, to use the <a href='https://beta.webcomponents.org/element/notwaldorf/emoji-rain' class='style-scope mark-down'>Emoji Rain element</a>:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-tag cm-bracket style-scope mark-down'>&lt;</span><span class='cm-tag style-scope mark-down'>link</span> <span class='cm-attribute style-scope mark-down'>rel</span>=<span class='cm-string style-scope mark-down'>'import'</span> <span class='cm-attribute style-scope mark-down'>href</span>=<span class='cm-string style-scope mark-down'>'../emoji-rain/emoji-rain.html'</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span> ... <span class='cm-tag cm-bracket style-scope mark-down'>&lt;</span><span class='cm-tag style-scope mark-down'>emoji-rain</span> <span class='cm-attribute style-scope mark-down'>active</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span><span class='cm-tag cm-bracket style-scope mark-down'>&lt;/</span><span class='cm-tag style-scope mark-down'>emoji-rain</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span> </pre> <p class='style-scope mark-down'>There are a number of ways to install custom elements. When you find an element you want to use, look at its README for the commands to install it. Most elements today can be installed with Bower. Bower also handles installing the components' dependencies. For more information on Bower, see <a href='https://bower.io/' class='style-scope mark-down'>Bower.io</a>.</p> <p class='style-scope mark-down'>For example, the <a href='https://beta.webcomponents.org/element/notwaldorf/emoji-rain' class='style-scope mark-down'>Emoji Rain README</a> describes the install process with Bower:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'>mkdir emoji-rain-demo <span class='cm-error style-scope mark-down'>&amp;</span><span class='cm-error style-scope mark-down'>&amp;</span> cd emoji-rain-demo bower install emoji-rain </pre><h1 id='how-do-i-define-a-new-html-element-' class='style-scope mark-down'>How do I define a new HTML element?</h1> <p class='style-scope mark-down'>This section describes the syntax for the new cross-browser version (v1) of the Web Components specification.</p> <p class='style-scope mark-down'>Use JavaScript to define a new HTML element and its tag with the customElements global. Call customElements.define() with the tag name you want to create and a JavaScript class that extends the base HTMLElement.</p> <p class='style-scope mark-down'>For example, to define a mobile drawer panel, <code class='style-scope mark-down'>&lt;app-drawer&gt;</code>:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-keyword style-scope mark-down'>class</span> <span class='cm-def style-scope mark-down'>AppDrawer</span> <span class='cm-keyword style-scope mark-down'>extends</span> <span class='cm-variable style-scope mark-down'>HTMLElement</span> {<span class='cm-meta style-scope mark-down'>...</span>} <span class='cm-variable style-scope mark-down'>window</span>.<span class='cm-property style-scope mark-down'>customElements</span>.<span class='cm-property style-scope mark-down'>define</span>(<span class='cm-string style-scope mark-down'>'app-drawer'</span>, <span class='cm-variable style-scope mark-down'>AppDrawer</span>); </pre> <p class='style-scope mark-down'>v0 of the Custom Elements specification used document.registerElement() for this purpose:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-keyword style-scope mark-down'>var</span> <span class='cm-def style-scope mark-down'>XFoo</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>registerElement</span>(<span class='cm-string style-scope mark-down'>'x-foo'</span>); <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>body</span>.<span class='cm-property style-scope mark-down'>appendChild</span>(<span class='cm-keyword style-scope mark-down'>new</span> <span class='cm-variable style-scope mark-down'>XFoo</span>()); </pre> <p class='style-scope mark-down'>See this article on the <a href='https://www.html5rocks.com/en/tutorials/webcomponents/customelements/' class='style-scope mark-down'>v0 Custom Elements specification</a> for more information. To use the new tag:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-tag cm-bracket style-scope mark-down'>&lt;</span><span class='cm-tag style-scope mark-down'>app-drawer</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span><span class='cm-tag cm-bracket style-scope mark-down'>&lt;/</span><span class='cm-tag style-scope mark-down'>app-drawer</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span> </pre> <p class='style-scope mark-down'>Using a custom element is no different to using a <code class='style-scope mark-down'>&lt;div&gt;</code> or any other element. Instances can be declared on the page, created dynamically in JavaScript, event listeners can be attached, etc.</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-tag cm-bracket style-scope mark-down'>&lt;</span><span class='cm-tag style-scope mark-down'>script</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span> <span class='cm-comment style-scope mark-down'>// Create with javascript</span> <span class='cm-keyword style-scope mark-down'>var</span> <span class='cm-def style-scope mark-down'>newDrawer</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>createElement</span>(<span class='cm-variable style-scope mark-down'>‘app</span><span class='cm-operator style-scope mark-down'>-</span><span class='cm-variable style-scope mark-down'>drawer’</span>); <span class='cm-comment style-scope mark-down'>// Add it to the page</span> <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>body</span>.<span class='cm-property style-scope mark-down'>appendChild</span>(<span class='cm-variable style-scope mark-down'>newDrawer</span>); <span class='cm-comment style-scope mark-down'>// Attach event listeners</span> <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>querySelector</span>(<span class='cm-variable style-scope mark-down'>‘app</span><span class='cm-operator style-scope mark-down'>-</span><span class='cm-variable style-scope mark-down'>drawer’</span>).<span class='cm-property style-scope mark-down'>addEventListener</span>(<span class='cm-variable style-scope mark-down'>‘open’</span>, <span class='cm-keyword style-scope mark-down'>function</span>() {<span class='cm-meta style-scope mark-down'>...</span>}); <span class='cm-tag cm-bracket style-scope mark-down'>&lt;/</span><span class='cm-tag style-scope mark-down'>script</span><span class='cm-tag cm-bracket style-scope mark-down'>&gt;</span> </pre> <h1 id='creating-and-using-a-shadow-root' class='style-scope mark-down'>Creating and using a shadow root</h1> <p class='style-scope mark-down'>This section describes the syntax for creating shadow DOM with the new cross-browser version (v1) of the shadow DOM specification. Shadow DOM is a new DOM feature that helps you build components. You can think of shadow DOM as a scoped subtree inside your element.</p> <p class='style-scope mark-down'>A shadow root is a document fragment that gets attached to a 'host' element. The act of attaching a shadow root is how the element gains its shadow DOM. To create shadow DOM for an element, call <code class='style-scope mark-down'>element.attachShadow()</code>:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-keyword style-scope mark-down'>const</span> <span class='cm-def style-scope mark-down'>header</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-variable style-scope mark-down'>document</span>.<span class='cm-property style-scope mark-down'>createElement</span>(<span class='cm-string style-scope mark-down'>'header'</span>); <span class='cm-keyword style-scope mark-down'>const</span> <span class='cm-def style-scope mark-down'>shadowRoot</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-variable style-scope mark-down'>header</span>.<span class='cm-property style-scope mark-down'>attachShadow</span>({<span class='cm-property style-scope mark-down'>mode</span>: <span class='cm-string style-scope mark-down'>'open'</span>}); <span class='cm-variable style-scope mark-down'>shadowRoot</span>.<span class='cm-property style-scope mark-down'>innerHTML</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-string style-scope mark-down'>'&lt;h1&gt;Hello Shadow DOM&lt;/h1&gt;'</span>; <span class='cm-comment style-scope mark-down'>// Could also use appendChild().</span> <span class='cm-comment style-scope mark-down'>// header.shadowRoot === shadowRoot</span> <span class='cm-comment style-scope mark-down'>// shadowRoot.host === header</span> </pre> <p class='style-scope mark-down'>Version 0 of the shadow DOM specification provided a slightly different method for creating shadow DOM:</p> <pre class='style-scope mark-down style-scope mark-down syntax-highlighted cm-s-default'><span class='cm-keyword style-scope mark-down'>var</span> <span class='cm-def style-scope mark-down'>root</span> <span class='cm-operator style-scope mark-down'>=</span> <span class='cm-variable style-scope mark-down'>host</span>.<span class='cm-property style-scope mark-down'>createShadowRoot</span>(); </pre> <p class='style-scope mark-down'>See this article on <a href='https://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/' class='style-scope mark-down'>shadow DOM v0</a> for more information. See also <a href='http://hayato.io/2016/shadowdomv1/' class='style-scope mark-down'>Hayato Ito's comparison of v0 and v1 of the shadow DOM specification</a>.</p> <h1 id='libraries-for-building-web-components' class='style-scope mark-down'>Libraries for building web components</h1> <p class='style-scope mark-down'>Many libraries already exist that make it easier to build web components. To dive in and create your own components, here are some you can try out:</p> <ul class='style-scope mark-down'> <li class='style-scope mark-down'><a href='https://bosonic.github.io/' class='style-scope mark-down'>Bosonic</a> is a collection of components designed to meet the everyday needs of web developers.</li> <li class='style-scope mark-down'><a href='https://www.polymer-project.org' class='style-scope mark-down'>Polymer</a> provides a set of features for creating custom elements.</li> <li class='style-scope mark-down'><a href='https://github.com/skatejs/skatejs' class='style-scope mark-down'>SkateJS</a> is a JavaScript library for writing web components with a small footprint.</li> <li class='style-scope mark-down'><a href='https://x-tag.github.io/' class='style-scope mark-down'>X-Tag</a> is an open source JavaScript library that provides an interface for component development.</li> </ul> </div>"
          }
        },
        "/drawer-abcd/vimeo-abcd": {
            "name": "Vimeo",
            "identifier": "vimeocontainer",
            "type": "P",
            "icon": "room",
            "view": "modules/vimeocontainer/module-vimeocontainer.html",
            "scope": {
                "vimeoId": "22439234"
            }
        },
        "/drawer-abcd/vimeo-abcd/another-abcz": {
            "name": "Home",
            "identifier": "html",
            "type": "P",
            "icon": "home",
            "view": "modules/html/module-html.html",
            "scope": {
                "value": "<p style='color:#39a9d3'>Mountain </p>",
                "display": ""
            }
        },
        "/drawer-abcd/map-abcd": {
            "name": "Google Maps",
            "identifier": "googlemap",
            "type": "P",
            "icon": "room",
            "view": "modules/googlemap/module-googlemap.html",
            "libs": [{
                "bower": {
                    "GoogleWebComponents/google-map": "^1.1.7"
                },
                "src": "bower_components/google-map/google-map.html"
            }],
            "scope": {
                "lat": "39.8847281",
                "lon": "4.2540999",
                "api": "AIzaSyANxt-hXcUf8PB0Tw1eFIB9qgby2Cmi-7w",
                "zoom": "15"
            }
        },
        "/drawer-abcd/map-abc": {
            "name": "Google Maps 1",
            "identifier": "googlemap",
            "type": "P",
            "icon": "room",
            "view": "modules/googlemap/module-googlemap.html",
            "libs": [{
                "bower": {
                    "GoogleWebComponents/google-map": "^1.1.7"
                },
                "src": "bower_components/google-map/google-map.html"
            }],
            "scope": {
                "lat": "40.3891018",
                "lon": "-3.6917287",
                "api": "AIzaSyANxt-hXcUf8PB0Tw1eFIB9qgby2Cmi-7w",
                "zoom": "15"
            }
        },
        "/menu-abcd": {
            "name": "Menu",
            "identifier": "simplemenu",
            "type": "P",
            "icon": "room",
            "view": "modules/simplemenu/module-simplemenu.html",
            "scope": {
                "menuItems": [{
                        "path": "/home-abcd",
                        "name": "Elem1"
                    },
                    {
                        "path": "/menu-abcd/another-abcd",
                        "name": "Elem2"
                    },
                    {
                        "path": "/menu-abcd/profile",
                        "name": "Profile"
                    },
                    {
                        "path": "/menu-abcd/map-abcd",
                        "name": "Maps2"
                    },
                    {
                        "path": "/menu-abcd/vimeo-abcd/another-abcz",
                        "name": "Vimeo COnt"
                    }
                ]
            }
        },
        "/drawer-abcd": {
            "name": "Drawer",
            "identifier": "drawerMenu",
            "type": "P",
            "icon": "room",
            "view": "modules/drawermenu/module-drawermenu.html",
            "scope": {
                "title": "Drawer menu",
                "menuItems": [{
                        "path": "/drawer-abcd/home-abcd",
                        "name": "Home"
                    },
                    {
                        "path": "/drawer-abcd/another-abcd",
                        "name": "404"
                    },
                    {
                        "path": "/drawer-abcd/profile",
                        "name": "Profile"
                    },
                    {
                        "path": "/drawer-abcd/map-abcd",
                        "name": "Maps2"
                    },
                    {
                        "path": "/drawer-abcd/vimeo-abcd/another-abcz",
                        "name": "Vimeo"
                    }
                ]
            }
        },
        "/menu-abcd/profile/html": {
            "name": "Home",
            "identifier": "html",
            "type": "P",
            "icon": "home",
            "view": "modules/html/module-html.html",
            "scope": {
                "value": "<p style='color:#39a9d3'>Test </p><p style='color:#d36339'>Html module</p>",
                "display": ""
            }
        },
        "/404": {
            "name": "Not Found",
            "identifier": "404",
            "type": "P",
            "icon": "",
            "view": "module-404.html",
            "scope": {}
        }
    }
}
